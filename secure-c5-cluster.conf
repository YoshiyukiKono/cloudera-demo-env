include file("nonsecure-c5-cluster.conf")

name: secure-c5-cluster

cloudera-manager {
    instance: ${common-instance-properties} {
        bootstrapScriptsPaths: ${cloudera-manager.instance.bootstrapScriptsPaths} [
            "scripts/secure-cluster/bootstrap-cm-open-port7.sh",
            "scripts/secure-cluster/bootstrap-common-configure-network.sh",
            "scripts/secure-cluster/bootstrap-cm-configure_krb5.sh"
        ]
    }

    # Secure Cluster
    # Autoconfiguration by bootstrap-cm-configure_krb5.sh
    krbAdminUsername: "cloudera-scm/admin@HADOOP"
    krbAdminPassword: "cloudera"
    unlimitedJce: true

    configs {
        CLOUDERA_MANAGER {
            # Secure Cluster
            # Autoconfiguration by bootstrap-cm-configure_krb5.sh
            KDC_TYPE: "MIT KDC"
            KDC_HOST: "kerberos" # see also bootstrap-configure-network.sh
            SECURITY_REALM: "HADOOP"
            KRB_MANAGE_KRB5_CONF: true
            #KRB_ENC_TYPES: "aes256-cts aes128-cts des3-hmac-sha1 arcfour-hmac des-hmac-sha1 des-cbc-md5 des-cbc-crc"
            KRB_ENC_TYPES: "arcfour-hmac"
        }
    }
    postCreateScriptsPaths: [
        "scripts/secure-cluster/postcreate-cm-close-port7.sh",
        "scripts/secure-cluster/postcreate-common-addusers-and-principals.sh"
    ]
}

cluster {
    services: ${cluster.services} [
        SENTRY
    ]

    master {
        instance: ${common-instance-properties} {
            bootstrapScriptsPaths: ${cluster.master.instance.bootstrapScriptsPaths} [
                "scripts/secure-cluster/bootstrap-common-configure-network.sh"
            ]
        }

        roles {
            SENTRY: [SENTRY_SERVER]
        }

        configs {
            HIVE {
                HIVEMETASTORE {
                    hive_enable_db_notification: true
                }
            }
        }
    }

    worker {
        instance: ${common-instance-properties} {
            bootstrapScriptsPaths: ${cluster.worker.instance.bootstrapScriptsPaths} [
                "scripts/secure-cluster/bootstrap-common-configure-network.sh"
            ]
        }
    }

    kafka {
        instance: ${common-instance-properties} {
            bootstrapScriptsPaths: ${cluster.kafka.instance.bootstrapScriptsPaths} [
                "scripts/secure-cluster/bootstrap-common-configure-network.sh"
            ]
        }
    }

    # override postcreate-common-addusers.sh
    instancePostCreateScriptsPaths: [
        "scripts/secure-cluster/postcreate-common-addusers-and-principals.sh"
    ]
}
