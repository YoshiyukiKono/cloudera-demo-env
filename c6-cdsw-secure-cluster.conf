include file("c6-secure-cluster.conf")

## The following section override the same keys of secure-c5-cluster.con

name: c6-cdsw-secure-cluster

INSTANCE_TYPE_CDSW:      t2.2xlarge   #vCPU 8, RAM 32G
CDSW_DOCKER_VOLUME_NUM:  3    
CDSW_DOCKER_VOLUME_GB:   200

cloudera-manager {
    csds: ${cloudera-manager.csds} [
        "https://archive.cloudera.com/cdsw1/1.5.0/csd/CLOUDERA_DATA_SCIENCE_WORKBENCH-CDH6-1.5.0.jar"
    ]
}

cluster {
    products {
        CDSW: 1
        Anaconda: 5
    }
    
    parcelRepositories: ${cluster.parcelRepositories} [
        "https://archive.cloudera.com/cdsw1/1.5.0/parcels/",
        "https://repo.continuum.io/pkgs/misc/parcels/"
    ]

    services: ${cluster.services} [
        CDSW
    ]

    configs {
        CDSW {
            # Dummy domain config, this cdsw domain is replaced in the instance-postcreate-cdsw.sh
            "cdsw.domain.config": cdsw.example.com 
        }
        HDFS {
            # Workaround to avoid HBase RS down
            # https://github.com/takabow/cloudera-demo-env/issues/19 
            "hdfs_canary_health_enabled": false
        }
    }

    cdsw {
        count: 1
        instance: ${common-instance-properties} {
	
            # Turning off mountAllUnmountedDisks is necessary for CDSW to work, as CDSW handles
            # this step on its own
            normalizationConfig {
                mountAllUnmountedDisks: false
            }
	    
            type: ${INSTANCE_TYPE_CDSW}
            instanceNamePrefix: ${?INSTANCE_NAME_PREFIX}"-cdsw"
            tags {
                group: cdsw
            }

            rootVolumeSizeGB: 100
	        rootVolumeType: gp2
	        ebsVolumeCount : ${CDSW_DOCKER_VOLUME_NUM}
	        ebsVolumeType: gp2
	        ebsVolumeSizeGiB: ${CDSW_DOCKER_VOLUME_GB}

            bootstrapScriptsPaths: [
                "scripts/common/bootstrap-common.sh",
                "scripts/cdsw-secure-cluster/bootstrap-cdsw-init.sh",
                "scripts/secure-cluster/bootstrap-common-configure-network.sh"
            ]
        }

        roles {
            CDSW: [CDSW_MASTER, CDSW_APPLICATION, CDSW_DOCKER]
            HDFS: [GATEWAY]
            HBASE: [GATEWAY]
            HIVE: [GATEWAY]
            SPARK_ON_YARN: [GATEWAY]
            SOLR: [GATEWAY]
        }

        configs {
            CDSW {
                CDSW_DOCKER {
                    "cdsw.docker.devices.config": "/dev/xvdf /dev/xvdg" # related to the ebs configuration above
                }
            }
        }
    }
    
    instancePostCreateScriptsPaths: ${cluster.instancePostCreateScriptsPaths} [
        "scripts/cdsw-secure-cluster/instance-postcreate-cdsw.sh"
    ]
}
