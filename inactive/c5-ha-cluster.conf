include file("c5-base-cluster.conf")

name: c5-ha-cluster

cluster {

    configs {
        HDFS {
            dfs_ha_fencing_methods: "shell(true)"
        }
        #OOZIE {
        #    oozie_load_balancer: "example.com:11000"
        #}
    }

    master: null // reset 
    master {
        count: 2

        instance: ${common-instance-properties} {
            type: ${INSTANCE_TYPE_MASTER}
            instanceNamePrefix: ${?INSTANCE_NAME_PREFIX}"-master1_2"
            tags {
                group: master
            }
            bootstrapScriptsPaths: [
                "scripts/common/bootstrap-common.sh",
                "scripts/base-cluster/bootstrap-master-init.sh"
            ]
        }

        roles {
            ZOOKEEPER: [SERVER]
            HDFS: [NAMENODE,FAILOVERCONTROLLER,JOURNALNODE]
            YARN: [RESOURCEMANAGER]
            HBASE: [MASTER]
            KUDU: [KUDU_MASTER]
            SPARK_ON_YARN: [GATEWAY]
            SPARK2_ON_YARN: [GATEWAY]
            HUE: [HUE_SERVER]
        }
        configs {
            HDFS {
                NAMENODE {
                    dfs_name_dir_list: "/data0/nn"
                    dfs_federation_namenode_nameservice: hanameservice
                    autofailover_enabled: true
                    dfs_namenode_quorum_journal_name: hanameservice
                } 
                JOURNALNODE {
                     dfs_journalnode_edits_dir: "/data0/jn"
                }

            }
            YARN {
                RESOURCEMANAGER {
                    yarn_scheduler_maximum_allocation_mb: 8192
                    yarn_scheduler_maximum_allocation_vcores: 4
                }
            }
            KUDU {
	            KUDU_MASTER {
	                fs_wal_dir: "/data0/kudu/masterwal"
	                fs_data_dirs: "/data0/kudu/master"
	            }
            }
            #OOZIE {
            #    OOZIE_SERVER {
            #        oozie_plugins_list: "org.apache.oozie.service.ZKLocksService,org.apache.oozie.service.ZKXLogStreamingService,org.apache.oozie.service.ZKJobsConcurrencyService,org.apache.oozie.service.ZKUUIDService"
            #    }
            #}
            #HIVE {
            #    HIVESERVER2 {
            #        hiveserver2_load_balancer: "example.com:11000"
            #    }
            #}
        }
    }

    master3 {
        count: 1

        instance: ${common-instance-properties} {
            type: ${INSTANCE_TYPE_MASTER}
            instanceNamePrefix: ${?INSTANCE_NAME_PREFIX}"-master3"
            tags {
                group: master
            }
            bootstrapScriptsPaths: [
                "scripts/common/bootstrap-common.sh",
                "scripts/base-cluster/bootstrap-master-init.sh"
            ]
        }

        roles {
            ZOOKEEPER: [SERVER]
            HDFS: [JOURNALNODE]
            YARN: [JOBHISTORY]
            SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER]
            SPARK2_ON_YARN: [SPARK2_YARN_HISTORY_SERVER]
            HBASE: [HBASETHRIFTSERVER]
            HUE: [HUE_LOAD_BALANCER]
            IMPALA: [STATESTORE,CATALOGSERVER]
            SOLR: [SOLR_SERVER]
            HIVE: [HIVEMETASTORE,HIVESERVER2]
            OOZIE: [OOZIE_SERVER]
            KUDU: [KUDU_MASTER]
        }
        configs {
            HDFS {
                JOURNALNODE {
                    dfs_journalnode_edits_dir: "/data0/jn"
                }
            }
            KUDU {
	            KUDU_MASTER {
	                fs_wal_dir: "/data0/kudu/masterwal"
	                fs_data_dirs: "/data0/kudu/master"
	            }
            }
        }
    }
    
    postCreateScriptsPaths: ["scripts/ha-cluster/postcreate-fix-invalid-config.sh"]
}
