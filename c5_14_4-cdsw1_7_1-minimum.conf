include file("c5_14_4-minimum-cluster.conf")

## The following section override the same keys of *-minimum-cluster.conf

name: c5_14_4-cdsw1_7_1-minimum

# 1 for Docker, 1 for application area (/var/lib/cdsw/)
CDSW_DOCKER_VOLUME_NUM:  2
CDSW_DOCKER_VOLUME_GB:   500
# Note: AWS EC2 't2.2xlarge'
CDSW_DOCKER_DEVICES_CONFIG: "/dev/xvdf"

cloudera-manager {
    csds: ${cloudera-manager.csds} [
        "https://archive.cloudera.com/cdsw1/1.7.1/csd/CLOUDERA_DATA_SCIENCE_WORKBENCH-CDH5-1.7.1.jar"
    ]
}

cluster {
    products {
        CDSW: 1
        #Anaconda: 5
    }

    parcelRepositories: ${cluster.parcelRepositories} [
        "https://archive.cloudera.com/cdsw1/1.7.1/parcels/",
        #"https://repo.continuum.io/pkgs/misc/parcels/"
    ]

    services: ${cluster.services} [
        CDSW
    ]

    configs {
        CDSW {
            # Dummy domain config, this cdsw domain is replaced in the instance-postcreate-cdsw.sh
            "cdsw.domain.config": cdsw.example.com
        }
        HDFS {
            # Workaround to avoid HBase RS down
            # https://github.com/takabow/cloudera-demo-env/issues/19
            "hdfs_canary_health_enabled": false
        }
    }

    cdsw {
        count: 1
        instance: ${common-instance-properties} {

            # Turning off mountAllUnmountedDisks is necessary for CDSW to work, as CDSW handles
            # this step on its own
            normalizationConfig {
                mountAllUnmountedDisks: false
            }

            type: ${INSTANCE_TYPE_CDSW}
            instanceNamePrefix: ${?INSTANCE_NAME_PREFIX}"-cdsw"
            tags {
                group: cdsw
            }

            rootVolumeSizeGB: 100
	          rootVolumeType: gp2
	          ebsVolumeCount : ${CDSW_DOCKER_VOLUME_NUM}
	          ebsVolumeType: gp2
	          ebsVolumeSizeGiB: ${CDSW_DOCKER_VOLUME_GB}

            dataDiskCount: ${CDSW_DOCKER_VOLUME_NUM}
            dataDiskType: LocalSSD
            localSSDInterfaceType: NVMe


            bootstrapScriptsPaths: [
                "scripts/common/bootstrap-common.sh",
                "scripts/cdsw-cluster/bootstrap-cdsw-init.sh"
            ]
        }

        roles {
            CDSW: [CDSW_MASTER, CDSW_APPLICATION, CDSW_DOCKER]
            HDFS: [GATEWAY]
            #HBASE: [GATEWAY]
            HIVE: [GATEWAY]
            SPARK_ON_YARN: [GATEWAY]
            SPARK2_ON_YARN: [GATEWAY]
            #SOLR: [GATEWAY]
        }

        configs {
            CDSW {
                CDSW_DOCKER {
                    "cdsw.docker.devices.config": ${CDSW_DOCKER_DEVICES_CONFIG} # related to the ebs configuration above
                }
            }
        }
    }

    instancePostCreateScriptsPaths: ${cluster.instancePostCreateScriptsPaths} [
        "scripts/cdsw-cluster/instance-postcreate-cdsw.sh"
    ]
}
